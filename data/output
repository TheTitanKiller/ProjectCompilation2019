*** Fichier data/progr1.lea

*** Analyse syntaxique ok
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeWhile
--- CheckType NodeOp
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeOp
--- CheckType NodeAssign
--- CheckType NodeId
--- CheckType NodeOp
*** Typage correct
*** Backtrace
Environment::types
>
>
Environment::procedures
>
>
StackEnvironment::local_variables_stack
**
Layer 0 :
Environment::Global
>
a: NodeId#a:TypeInt_null#
>
**
*** End backtrace

*** Fichier data/progr2.lea

*** Analyse syntaxique ok
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeAssign
--- CheckType NodeId
--- CheckType NodeLiteral
--- CheckType NodeAssign
--- CheckType NodeId
--- CheckType NodeLiteral
--- CheckType NodeAssign
--- CheckType NodeId
--- CheckType NodeLiteral
--- CheckType NodeAssign
--- CheckType NodeId
--- CheckType NodeLiteral
--- CheckType NodeAssign
--- CheckType NodeArrayAccess
--- CheckType NodeLiteral
--- CheckType NodeAssign
--- CheckType NodeArrayAccess
--- CheckType NodeLiteral
--- CheckType NodeAssign
--- CheckType NodeArrayAccess
--- CheckType NodeLiteral
--- CheckType NodeAssign
--- CheckType NodeArrayAccess
--- CheckType NodeLiteral
--- CheckType NodeOp
--- CheckType NodeOp
--- CheckType NodeOp
--- CheckType NodeOp
--- CheckType NodeOp
*** Typage correct
*** Backtrace
Environment::types
>
>
Environment::procedures
>
>
StackEnvironment::local_variables_stack
**
Layer 0 :
Environment::Global
>
b: NodeId#b:TypeBoolean#
c: NodeId#c:TypeString#
d: NodeId#d:TypeArray(TypeArrayRange[TypeInt_1..TypeInt_10], TypeString)#
x: NodeId#x:TypeInt_null#
y: NodeId#y:TypeInt_null#
>
**
*** End backtrace

*** Fichier data/progr3.lea

*** Analyse syntaxique ok
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeAssign
--- CheckType NodeId
--- CheckType NodeLiteral
--- CheckType NodeAssign
--- CheckType NodeId
--- CheckType NodeLiteral
--- CheckType NodeAssign
--- CheckType NodeId
--- CheckType NodeLiteral
--- CheckType NodeAssign
--- CheckType NodeId
--- CheckType NodeLiteral
--- CheckType NodeAssign
--- CheckType NodeArrayAccess
--- CheckType NodeLiteral
--- CheckType NodeAssign
--- CheckType NodeArrayAccess
--- CheckType NodeLiteral
--- CheckType NodeAssign
--- CheckType NodeArrayAccess
--- CheckType NodeLiteral
--- CheckType NodeAssign
--- CheckType NodeArrayAccess
--- CheckType NodeLiteral
--- CheckType NodeOp
--- CheckType NodeOp
--- CheckType NodeOp
--- CheckType NodeOp
--- CheckType NodeOp
--- CheckType NodeNew
--- CheckType NodeAssign
--- CheckType NodePtrAccess
--- CheckType NodeLiteral
--- CheckType NodeOp
--- CheckType NodeOp
--- CheckType NodeNew
--- CheckType NodeOp
--- CheckType NodeAssign
--- CheckType NodePtrAccess
--- CheckType NodeId
--- CheckType NodeOp
--- CheckType NodeNew
--- CheckType NodeAssign
--- CheckType NodePtrAccess
--- CheckType NodeLiteral
--- CheckType NodeOp
--- CheckType NodeDispose
--- CheckType NodeOp
--- CheckType NodeOp
*** Typage correct
*** Backtrace
Environment::types
>
>
Environment::procedures
>
>
StackEnvironment::local_variables_stack
**
Layer 0 :
Environment::Global
>
p: NodeId#p:TypePointer(TypeInt_null)#
q: NodeId#q:TypePointer(TypeString)#
b: NodeId#b:TypeBoolean#
r: NodeId#r:TypePointer(TypeInt_null)#
c: NodeId#c:TypeString#
d: NodeId#d:TypeArray(TypeArrayRange[TypeInt_1..TypeInt_10], TypeString)#
x: NodeId#x:TypeInt_null#
y: NodeId#y:TypeInt_null#
>
**
*** End backtrace

*** Fichier data/progr4.lea

*** Analyse syntaxique ok
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeAssign
--- CheckType NodeId
--- CheckType NodeLiteral
--- CheckType NodeWhile
--- CheckType NodeOp
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeOp
--- CheckType NodeIf
--- CheckType NodeAssign
--- CheckType NodeId
--- CheckType NodeOp
*** Typage correct
*** Backtrace
Environment::types
>
>
Environment::procedures
>
>
StackEnvironment::local_variables_stack
**
Layer 0 :
Environment::Global
>
x: NodeId#x:TypeInt_null#
y: NodeId#y:TypeInt_null#
>
**
*** End backtrace

*** Fichier data/progr5.lea

*** Analyse syntaxique ok
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeReturn
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeWhile
--- CheckType NodeOp
--- CheckType NodeIf
--- CheckType NodeReturn
--- CheckType NodeList
--- CheckType NodeAssign
--- CheckType NodeId
--- CheckType NodeLiteral
--- CheckType NodeAssign
--- CheckType NodeId
--- CheckType NodeCallFct
--- CheckType NodeLiteral
--- CheckType NodeLiteral
--- CheckType NodeOp
--- CheckType NodeOp
*** Typage correct
*** Backtrace
Environment::types
>
>
Environment::procedures
>
sum: NodeId#sum:([i:TypeInt_null], [j:TypeInt_null]) -> TypeInt_null Defined: false Name: sum#
pgcd: NodeId#pgcd:([i:TypeInt_null], [j:TypeInt_null]) -> TypeInt_null Defined: false Name: pgcd#
>
StackEnvironment::local_variables_stack
**
Layer 0 :
Environment::Global
>
x: NodeId#x:TypeInt_null#
>
**
*** End backtrace

*** Fichier data/progr6.lea

*** Analyse syntaxique ok
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeIf
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeIf
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeIf
--- CheckType NodeOp
--- CheckType NodeOp
--- CheckType NodeOp
--- CheckType NodeIf
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeIf
--- CheckType NodeReturn
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeIf
--- CheckType NodeList
--- CheckType NodeOp
--- CheckType NodeOp
--- CheckType NodeCallFct
--- CheckType NodeLiteral
--- CheckType NodeLiteral
--- CheckType NodeLiteral
--- CheckType NodeLiteral
--- CheckType NodeOp
--- CheckType NodeOp
*** Typage correct
*** Backtrace
Environment::types
>
>
Environment::procedures
>
hanoi: NodeId#hanoi:([a:TypeString], [b:TypeString], [c:TypeString], [k:TypeInt_null]) -> TypeVoid Defined: false Name: hanoi#
fact2: NodeId#fact2:([k:TypeInt_null]) -> TypeInt_null Defined: false Name: fact2#
pair: NodeId#pair:([i:TypeInt_null]) -> TypeBoolean Defined: false Name: pair#
fact1: NodeId#fact1:([k:TypeInt_null]) -> TypeInt_null Defined: false Name: fact1#
impair: NodeId#impair:([i:TypeInt_null]) -> TypeBoolean Defined: false Name: impair#
>
StackEnvironment::local_variables_stack
**
Layer 0 :
Environment::Global
>
x: NodeId#x:TypeInt_null#
>
**
*** End backtrace

*** Fichier data/progr7.lea

*** Analyse syntaxique ok
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeAssign
--- CheckType NodeArrayAccess
--- CheckType NodeLiteral
--- CheckType NodeAssign
--- CheckType NodeArrayAccess
--- CheckType NodeLiteral
--- CheckType NodeAssign
--- CheckType NodeArrayAccess
--- CheckType NodeLiteral
--- CheckType NodeAssign
--- CheckType NodeArrayAccess
--- CheckType NodeLiteral
--- CheckType NodeAssign
--- CheckType NodeArrayAccess
--- CheckType NodeLiteral
--- CheckType NodeOp
--- CheckType NodeOp
--- CheckType NodeOp
*** Typage correct
*** Backtrace
Environment::types
>
>
Environment::procedures
>
>
StackEnvironment::local_variables_stack
**
Layer 0 :
Environment::Global
>
week: NodeId#week:TypeArray(TypeArrayRange[TypeInt_0..TypeInt_6], TypeString)#
year: NodeId#year:TypeArray(TypeArrayRange[TypeInt_1..TypeInt_7], TypeArray(TypeArrayRange[TypeInt_1..TypeInt_31], TypeArray(TypeArrayRange[TypeInt_1..TypeInt_12], TypeString)))#
>
**
*** End backtrace

*** Fichier data/progr8.lea

*** Analyse syntaxique ok
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeAssign
--- CheckType NodeArrayAccess
--- CheckType NodeLiteral
--- CheckType NodeAssign
--- CheckType NodeArrayAccess
type de l'index incorrect
*** Erreur de typage
*** Backtrace
Environment::types
>
months: NodeId#months:(TypeItemEnum@JANUARY=0, TypeItemEnum@FEBRUARY=1, TypeItemEnum@MARCH=2, TypeItemEnum@APRIL=3, TypeItemEnum@MAY=4, TypeItemEnum@JUNE=5, TypeItemEnum@JULY=6, TypeItemEnum@AUGUST=7, TypeItemEnum@SEPTEMBER=8, TypeItemEnum@OCTOBER=9, TypeItemEnum@NOVEMBER=10, TypeItemEnum@DECEMBER=11)#
days: NodeId#days:(TypeItemEnum@SUNDAY=0, TypeItemEnum@MONDAY=1, TypeItemEnum@TUESDAY=2, TypeItemEnum@WEDNESDAY=3, TypeItemEnum@THURSDAY=4, TypeItemEnum@FRIDAY=5, TypeItemEnum@SATURDAY=6)#
>
Environment::procedures
>
>
StackEnvironment::local_variables_stack
**
Layer 0 :
Environment::Global
>
JANUARY: NodeId#JANUARY:TypeItemEnum@JANUARY=0#
JUNE: NodeId#JUNE:TypeItemEnum@JUNE=5#
THURSDAY: NodeId#THURSDAY:TypeItemEnum@THURSDAY=4#
week: NodeId#week:TypeArray(TypeArrayRange[TypeItemEnum@MONDAY=1..TypeItemEnum@FRIDAY=5], TypeString)#
SUNDAY: NodeId#SUNDAY:TypeItemEnum@SUNDAY=0#
MAY: NodeId#MAY:TypeItemEnum@MAY=4#
d: NodeId#d:TypeArrayRange[TypeItemEnum@SUNDAY=0..TypeItemEnum@SATURDAY=6]#
OCTOBER: NodeId#OCTOBER:TypeItemEnum@OCTOBER=9#
year: NodeId#year:TypeArray(TypeArrayRange[TypeItemEnum@SUNDAY=0..TypeItemEnum@SATURDAY=6], TypeArray(TypeArrayRange[TypeInt_1..TypeInt_31], TypeArray(TypeArrayRange[TypeItemEnum@JANUARY=0..TypeItemEnum@DECEMBER=11], TypeString)))#
TUESDAY: NodeId#TUESDAY:TypeItemEnum@TUESDAY=2#
FRIDAY: NodeId#FRIDAY:TypeItemEnum@FRIDAY=5#
DECEMBER: NodeId#DECEMBER:TypeItemEnum@DECEMBER=11#
FEBRUARY: NodeId#FEBRUARY:TypeItemEnum@FEBRUARY=1#
SEPTEMBER: NodeId#SEPTEMBER:TypeItemEnum@SEPTEMBER=8#
NOVEMBER: NodeId#NOVEMBER:TypeItemEnum@NOVEMBER=10#
WEDNESDAY: NodeId#WEDNESDAY:TypeItemEnum@WEDNESDAY=3#
MONDAY: NodeId#MONDAY:TypeItemEnum@MONDAY=1#
SATURDAY: NodeId#SATURDAY:TypeItemEnum@SATURDAY=6#
MARCH: NodeId#MARCH:TypeItemEnum@MARCH=2#
AUGUST: NodeId#AUGUST:TypeItemEnum@AUGUST=7#
JULY: NodeId#JULY:TypeItemEnum@JULY=6#
APRIL: NodeId#APRIL:TypeItemEnum@APRIL=3#
>
**
*** End backtrace

*** Fichier data/progr9.lea

*** Analyse syntaxique ok
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeId
--- CheckType NodeId
--- CheckType NodeId
--- CheckType NodeId
--- CheckType NodeId
--- CheckType NodeId
--- CheckType NodeId
--- CheckType NodeId
--- CheckType NodeId
--- CheckType NodeId
--- CheckType NodeId
--- CheckType NodeId
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeId
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeList
--- CheckType NodeId
--- CheckType NodeList
--- CheckType NodeNew
--- CheckType NodeAssign
--- CheckType NodePtrAccess
--- CheckType NodeCallFct
--- CheckType NodeId
*** Erreur de typage [i:TypeInt_null] != TypeInt_null
*** Erreur de typage
*** Backtrace
Environment::types
>
DaysOfWeek: NodeId#DaysOfWeek:(TypeItemEnum@Sunday=0, TypeItemEnum@Monday=1, TypeItemEnum@Tuesday=2, TypeItemEnum@Wednesday=3, TypeItemEnum@Thursday=4, TypeItemEnum@Friday=5, TypeItemEnum@Saturday=6)#
Months: NodeId#Months:(TypeItemEnum@January=0, TypeItemEnum@February=1, TypeItemEnum@March=2, TypeItemEnum@April=3, TypeItemEnum@May=4, TypeItemEnum@June=5, TypeItemEnum@July=6, TypeItemEnum@August=7, TypeItemEnum@September=8, TypeItemEnum@October=9, TypeItemEnum@November=10, TypeItemEnum@December=11)#
range1: NodeId#range1:TypeArrayRange[TypeInt_64..TypeInt_81]#
named1: NodeId#named1:TypeString#
range2: NodeId#range2:TypeArrayRange[TypeItemEnum@Monday=1..TypeItemEnum@Friday=5]#
ptr2: NodeId#ptr2:TypePointer(TypeArray(TypeArrayRange[TypeInt_1..TypeInt_32], TypeArray((TypeItemEnum@Sunday=0, TypeItemEnum@Monday=1, TypeItemEnum@Tuesday=2, TypeItemEnum@Wednesday=3, TypeItemEnum@Thursday=4, TypeItemEnum@Friday=5, TypeItemEnum@Saturday=6), TypeInt_null)))#
table4: NodeId#table4:TypeArray(TypeArrayRange[TypeInt_1..TypeInt_32], TypeArray((TypeItemEnum@Sunday=0, TypeItemEnum@Monday=1, TypeItemEnum@Tuesday=2, TypeItemEnum@Wednesday=3, TypeItemEnum@Thursday=4, TypeItemEnum@Friday=5, TypeItemEnum@Saturday=6), TypeInt_null))#
table3: NodeId#table3:TypeArray(TypeArrayRange[TypeItemEnum@Monday=1..TypeItemEnum@Friday=5], TypeInt_null)#
chaine: NodeId#chaine:TypeString#
table2: NodeId#table2:TypeArray(TypeArrayRange[TypeInt_64..TypeInt_81], TypeInt_null)#
table1: NodeId#table1:TypeArray(TypeArrayRange[TypeInt_1..TypeInt_32], TypeInt_null)#
entier: NodeId#entier:TypeInt_null#
ptr1: NodeId#ptr1:TypePointer(TypeInt_null)#
booleen: NodeId#booleen:TypeBoolean#
>
Environment::procedures
>
goo: NodeId#goo:([i:TypeInt_null], [j:TypeInt_null]) -> TypeBoolean Defined: false Name: goo#
foo: NodeId#foo:([i:TypeInt_null], [j:TypeInt_null]) -> TypePointer(TypeBoolean) Defined: false Name: foo#
>
StackEnvironment::local_variables_stack
**
Layer 0 :
Environment::Global
>
r2: NodeId#r2:TypeArrayRange[TypeItemEnum@Monday=1..TypeItemEnum@Friday=5]#
June: NodeId#June:TypeItemEnum@June=5#
May: NodeId#May:TypeItemEnum@May=4#
September: NodeId#September:TypeItemEnum@September=8#
Monday: NodeId#Monday:TypeItemEnum@Monday=1#
March: NodeId#March:TypeItemEnum@March=2#
Saturday: NodeId#Saturday:TypeItemEnum@Saturday=6#
October: NodeId#October:TypeItemEnum@October=9#
December: NodeId#December:TypeItemEnum@December=11#
Friday: NodeId#Friday:TypeItemEnum@Friday=5#
Tuesday: NodeId#Tuesday:TypeItemEnum@Tuesday=2#
July: NodeId#July:TypeItemEnum@July=6#
January: NodeId#January:TypeItemEnum@January=0#
February: NodeId#February:TypeItemEnum@February=1#
November: NodeId#November:TypeItemEnum@November=10#
b: NodeId#b:TypeBoolean#
m2: NodeId#m2:TypeArray(TypeArrayRange[TypeItemEnum@Monday=1..TypeItemEnum@Thursday=4], TypeBoolean)#
k: NodeId#k:TypeArray(TypeArrayRange[TypeItemEnum@Monday=1..TypeItemEnum@Friday=5], TypeInt_null)#
l: NodeId#l:TypeArray(TypeArrayRange[TypeItemEnum@Monday=1..TypeItemEnum@Friday=5], TypeBoolean)#
m: NodeId#m:(TypeItemEnum@January=0, TypeItemEnum@February=1, TypeItemEnum@March=2, TypeItemEnum@April=3, TypeItemEnum@May=4, TypeItemEnum@June=5, TypeItemEnum@July=6, TypeItemEnum@August=7, TypeItemEnum@September=8, TypeItemEnum@October=9, TypeItemEnum@November=10, TypeItemEnum@December=11)#
April: NodeId#April:TypeItemEnum@April=3#
August: NodeId#August:TypeItemEnum@August=7#
p: NodeId#p:TypePointer(TypeInt_null)#
Thursday: NodeId#Thursday:TypeItemEnum@Thursday=4#
month: NodeId#month:(TypeItemEnum@January=0, TypeItemEnum@February=1, TypeItemEnum@March=2, TypeItemEnum@April=3, TypeItemEnum@May=4, TypeItemEnum@June=5, TypeItemEnum@July=6, TypeItemEnum@August=7, TypeItemEnum@September=8, TypeItemEnum@October=9, TypeItemEnum@November=10, TypeItemEnum@December=11)#
Sunday: NodeId#Sunday:TypeItemEnum@Sunday=0#
Wednesday: NodeId#Wednesday:TypeItemEnum@Wednesday=3#
x: NodeId#x:TypeInt_null#
z2: NodeId#z2:TypeArray(TypeArrayRange[TypeInt_1..TypeInt_32], TypeInt_null)#
y: NodeId#y:TypeInt_null#
z: NodeId#z:TypeInt_null#
r1: NodeId#r1:TypeArrayRange[TypeInt_64..TypeInt_81]#
>
**
*** End backtrace

